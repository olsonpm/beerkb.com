@mixin per-size($prop-list, $xxs, $xs, $sm, $md, $lg, $unit: null) {
  @media (max-width: $screen-xxs-max) {
    @each $prop in $prop-list {
      #{$prop}: #{$xxs}#{$unit};
    }
  }
  @media (min-width: $screen-xs-min) and (max-width: $screen-xs-max) {
    @each $prop in $prop-list {
      #{$prop}: #{$xs}#{$unit};
    }
  }
  @media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
    @each $prop in $prop-list {
      #{$prop}: #{$sm}#{$unit};
    }
  }
  @media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
    @each $prop in $prop-list {
      #{$prop}: #{$md}#{$unit};
    }
  }
  @media (min-width: $screen-lg-min) {
    @each $prop in $prop-list {
      #{$prop}: #{$lg}#{$unit};
    }
  }
}

@mixin brewery-name-padding() {
  @include per-size('padding-top', 9, 9, 9, 8, 8, px);
  @include per-size('padding-bottom', 9, 9, 9, 10, 10, px);
  padding-left: 12px;
  padding-right: 12px;
}

$font-size-map: (
  xxs: (base: 14, med: 16, lg: 16, xl: 30)
  , xs: (base: 14, med: 17, lg: 18, xl: 32)
  , sm: (base: 15, med: 17, lg: 20, xl: 34)
  , md: (base: 16, med: 18, lg: 22, xl: 36)
  , lg: (base: 16, med: 18, lg: 22, xl: 36)
);
@mixin res-aware-font-size($size) {
  @media (max-width: $screen-xxs-max) {
    font-size: map-get(map-get($font-size-map, 'xxs'), $size)#{$px};
  }
  @media (min-width: $screen-xs-min) and (max-width: $screen-xs-max) {
    font-size: map-get(map-get($font-size-map, 'xs'), $size)#{$px};
  }
  @media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
    font-size: map-get(map-get($font-size-map, 'sm'), $size)#{$px};
  }
  @media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
    font-size: map-get(map-get($font-size-map, 'md'), $size)#{$px};
  }
  @media (min-width: $screen-lg-min) {
    font-size: map-get(map-get($font-size-map, 'lg'), $size)#{$px};
  }
}


// general purpose element spacing

$element-spacing-map: (
  xxs: (xs: 6, sm: 12, md: 14, lg: 18, xl: 24, xxl: 32)
  , xs: (xs: 7, sm: 13, md: 16, lg: 22, xl: 30, xxl: 40)
  , sm: (xs: 7, sm: 13, md: 18, lg: 28, xl: 36, xxl: 48)
  , md: (xs: 8, sm: 14, md: 20, lg: 32, xl: 42, xxl: 56)
  , lg: (xs: 8, sm: 14, md: 22, lg: 36, xl: 50, xxl: 64)
);
@mixin res-aware-element-spacing($prop-list, $size, $unit: px) {
  @media (max-width: $screen-xxs-max) {
    @each $prop in $prop-list {
      #{$prop}: map-get(map-get($element-spacing-map, 'xxs'), $size)#{$unit};
    }
  }
  @media (min-width: $screen-xs-min) and (max-width: $screen-xs-max) {
    @each $prop in $prop-list {
      #{$prop}: map-get(map-get($element-spacing-map, 'xs'), $size)#{$unit};
    }
  }
  @media (min-width: $screen-sm-min) and (max-width: $screen-sm-max) {
    @each $prop in $prop-list {
      #{$prop}: map-get(map-get($element-spacing-map, 'sm'), $size)#{$unit};
    }
  }
  @media (min-width: $screen-md-min) and (max-width: $screen-md-max) {
    @each $prop in $prop-list {
      #{$prop}: map-get(map-get($element-spacing-map, 'md'), $size)#{$unit};
    }
  }
  @media (min-width: $screen-lg-min) {
    @each $prop in $prop-list {
      #{$prop}: map-get(map-get($element-spacing-map, 'lg'), $size)#{$unit};
    }
  }
}

@mixin item-bg-and-hover($bg-color, $shadow-color: $fg, $shadow-size: 10px, $shadow-start: 0, $contrast-border: 0) {
  background-color: $bg-color;
  border: 1px solid $bg-color;

  > h2 { background-color: $bg-color; }
  > h3 { background-color: $bg-color; }

  transition: box-shadow $duration-fast;

  &.hovered {
    box-shadow: 0 0 0 $contrast-border $brewery-odd, 0 0 $shadow-size $shadow-start $shadow-color;
  }
}
